{"version":3,"sources":["helper.js","worker.js","App.js","reportWebVitals.js","index.js"],"names":["require","isHexString","str","test","Worker_fn","Worker","webWorker","VanityAddressForm","props","state","running","search","prefix","use_prefix","suffix","use_suffix","iterations","result","output","matches","event","this","target","value","console","log","JSON","stringify","setState","terminate","preventDefault","count","postMessage","onerror","e","addEventListener","numberMatches","message","parse","data","action","match","address","seed","privateKey","publicKey","originalAddress","alert","className","type","id","checked","onChange","handlePrefixCheckboxChanged","bind","name","handlePrefixChanged","handleSuffixCheckboxChanged","handleSuffixChanged","handleIterationsChanged","onClick","generateAddresses","disabled","reset","stop","readOnly","href","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f787b4e.chunk.js","sourcesContent":["var getRandomValues = require('get-random-values');\r\n\r\n// Returns true if address matches our criteria\r\nexport function isMatch(address, use_prefix, prefix, use_suffix, suffix) {\r\n  // Chop off vite_\r\n  const addr = address.substring(5);\r\n  // Check matching prefix \r\n  if(use_prefix) {\r\n    // Fail on null or empty string\r\n    if (prefix == null) return false;\r\n    // Fail on mismatch\r\n    if (! addr.startsWith(prefix.toLowerCase())) return false;\r\n  }\r\n  // Check matching suffix\r\n  if(use_suffix) {\r\n    // Fail on null or empty string\r\n    if (suffix == null) return false;\r\n    // Fail on mismatch\r\n    if (! addr.endsWith(suffix.toLowerCase())) return false;\r\n  }\r\n  // If you reached here, you've won! :)\r\n  return true;\r\n}\r\n\r\n// Generate new random seed\r\nexport function generateNewRandomSeed() {\r\n    // Generate random 32 byte seed\r\n    var array = new Uint8Array(32);\r\n    getRandomValues(array);\r\n    // Generate randomized hex string for seed\r\n    return buf2hex(array.buffer);\r\n}\r\n\r\n// Returns whether or not str is valid hex string\r\nexport function isHexString(str) {\r\n  var re = /^([0-9A-Fa-f])*$/;\r\n  return (re.test(str));\r\n}\r\n\r\n// Convert buffer to hex string\r\nexport function buf2hex(buffer) { \r\n  return [...new Uint8Array(buffer)]\r\n      .map(x => x.toString(16).padStart(2, '0'))  // Convert to hex, pad with 0\r\n      .join('');\r\n}","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/worker.4e93830f.worker.js\");\n}\n","import './App.css';\r\n\r\nimport React from 'react' \r\nimport {isHexString} from './helper'\r\n\r\n/* eslint import/no-webpack-loader-syntax: off */\r\nimport Worker from \"worker-loader!./worker.js\";\r\nvar webWorker = new Worker();\r\n\r\nconst DEFAULT_ITERATIONS = 5000;\r\n\r\nexport default class VanityAddressForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Define state\r\n    this.state = {\r\n        running: false,\r\n        // Search parameters\r\n        search: {      \r\n          prefix: '',\r\n          use_prefix: true,\r\n          suffix: '',\r\n          use_suffix: false,\r\n          iterations: DEFAULT_ITERATIONS\r\n        },\r\n        // Output result\r\n        result: {\r\n          output: '',\r\n          matches: 0,\r\n          iterations: 0\r\n        }\r\n      };\r\n  }\r\n\r\n  // Text in prefix textfield modified\r\n  handlePrefixChanged(event) {\r\n    var search = this.state.search;\r\n    search.prefix  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Text in suffix textfield modified\r\n  handleSuffixChanged(event) {\r\n    var search = this.state.search;\r\n    search.suffix  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Text in iterations textfield modified\r\n  handleIterationsChanged(event) {\r\n    var search = this.state.search;\r\n    search.iterations  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Handle check box change\r\n  handlePrefixCheckboxChanged(event) {\r\n    var search = this.state.search;\r\n    // Toggle use_prefix value\r\n    search.use_prefix = ! search.use_prefix; \r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  handleSuffixCheckboxChanged(event) {\r\n    var search = this.state.search;\r\n    // Toggle use_suffix value\r\n    search.use_suffix = ! search.use_suffix; \r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Reset all values\r\n  reset(event) {\r\n    // Set all search terms to their defaults\r\n    var search = this.state.search;\r\n    search.prefix = \"\";\r\n    search.suffix = \"\";\r\n    search.use_prefix = false;\r\n    search.use_suffix = false;\r\n    search.iterations = DEFAULT_ITERATIONS;\r\n    this.setState({ search: search });\r\n    // Clear output\r\n    var result = this.state.result;\r\n    result.output= \"\";\r\n    result.matches = 0;\r\n    result.iterations = 0;\r\n    this.setState({ result: result });\r\n  }\r\n\r\n  // Stop button pressed\r\n  stop(event) {\r\n    // Update running to false\r\n    var state = this.state;\r\n    state.running = false;\r\n    this.setState({ state : state});\r\n    // Terminate worker\r\n    webWorker.terminate();\r\n    // Reinstantiate\r\n    webWorker = new Worker();\r\n  }\r\n\r\n  // Generate addresses\r\n  generateAddresses(event) {\r\n\r\n    event.preventDefault();\r\n\r\n    // Clear output\r\n    var state = this.state;\r\n\r\n    // Grab search state. Log for debug\r\n    var search = this.state.search;\r\n    console.log(JSON.stringify(search));\r\n\r\n    // Grab search parameters\r\n    let prefix = this.state.search.prefix;\r\n    let use_prefix = this.state.search.use_prefix;\r\n    let suffix = this.state.search.suffix;\r\n    let use_suffix = this.state.search.use_suffix;\r\n    let count = this.state.search.iterations;\r\n\r\n    // Make sure suffix is valid hex string\r\n    if(! isHexString(search.prefix)) {\r\n      alert(\"Prefix must be a hex string. Valid characters are 0-9 and A-F.\");\r\n      return;\r\n    }\r\n    // Make sure suffix is valid hex string\r\n    if(! isHexString(search.suffix)) {\r\n      alert(\"Suffix must be a hex string. Valid characters are 0-9 and A-F.\");\r\n      return;\r\n    }\r\n\r\n    // Pass in search parameters to webworker\r\n    webWorker.postMessage( { use_prefix: use_prefix, prefix: prefix, use_suffix: use_suffix, suffix:suffix, count:count });\r\n\r\n    webWorker.onerror = (e) => {\r\n      console.log(e);\r\n    };\r\n\r\n    webWorker.addEventListener('message', (e) => {\r\n\r\n      // Update output state\r\n      var state = this.state;\r\n      var result = this.state.result;\r\n      var output = result.output;\r\n      var numberMatches = result.matches;\r\n\r\n      // Parse match structure from message\r\n      var message = JSON.parse(e.data);\r\n      if(message.action == \"MATCH\") {\r\n        var match = message.data;\r\n        output += \"Match #\" + (numberMatches + 1) + \"\\n\" +\r\n            \"Address: \" + match.address.address + \"\\n\" +\r\n            \"Seed: \" + match.seed + \"\\n\" +\r\n            \"Private Key: \" + match.address.privateKey + \"\\n\" +\r\n            \"Public Key: \" + match.address.publicKey + \"\\n\" +\r\n            \"Original Address: \" + match.address.originalAddress + \"\\n\\n\";\r\n        result.matches = numberMatches + 1;\r\n        result.output = output;\r\n        console.log('Worker added match: ', match);\r\n      } else if(message.action == \"COUNT\") {\r\n        var count = message.data;\r\n        result.iterations = count;\r\n      } else if(message.action == \"END\") {\r\n        // Work has ended. Update final count.\r\n        var count = message.data;\r\n        result.iterations = count;\r\n        // Set running to false\r\n        state.running = false;\r\n      } else if(message.action == \"START\") {\r\n        // Clear previous search's state\r\n        result.iterations = 0;\r\n        result.output = \"\"\r\n        result.matches = 0;\r\n        // Set running to true\r\n        state.running = true;\r\n      } else {\r\n        console.log(\"Worker received unknown action: \", message);\r\n      }\r\n      // Update state\r\n      state.result = result;\r\n      this.setState({ state : state });\r\n    }, false);\r\n\r\n  }\r\n\r\n  render() {\r\n  return (\r\n      <div className=\"root\">\r\n        <div className=\"header\">\r\n          <h2>Vite Vanity Address Creator</h2>\r\n        </div>\r\n        <div className=\"input-section\">\r\n          <div className=\"input-text-row\"> \r\n            <input type=\"checkbox\" className=\"input-checkbox\" id=\"usePrefix\" value={this.state.search.use_prefix} \r\n              checked={this.state.search.use_prefix} onChange={this.handlePrefixCheckboxChanged.bind(this)}/>\r\n            <label className=\"input-label\">Prefix:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"prefix\" name=\"prefix\" \r\n              value={this.state.search.prefix} onChange={this.handlePrefixChanged.bind(this)} />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n            <input type=\"checkbox\" className=\"input-checkbox\" id=\"useSuffix\" value={this.state.search.use_suffix} \r\n              checked={this.state.search.use_suffix} onChange={this.handleSuffixCheckboxChanged.bind(this)}/>\r\n            <label className=\"input-label\">Suffix:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"suffix\" name=\"suffix\" \r\n                value={this.state.search.suffix} onChange={this.handleSuffixChanged.bind(this)} />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n            <label className=\"input-label\">Iterations:</label>\r\n            <input type=\"text\" className=\"text-input-iterations\" id=\"iterations\" name=\"iterations\" \r\n              value={this.state.search.iterations} onChange={this.handleIterationsChanged.bind(this)} />\r\n            <label className=\"matches-label\" name=\"matches-found-label\" id=\"matches-found-label\">\r\n              {this.state.result.matches} matches out of {this.state.result.iterations}</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-button-row\">\r\n          <button type=\"button\" className=\"input-button\" name=\"Generate\" \r\n            onClick={this.generateAddresses.bind(this)} disabled={this.state.running}>\r\n            Generate\r\n          </button>\r\n          <button type=\"button\" className=\"input-button\" name=\"Reset\" \r\n          onClick={this.reset.bind(this)} disabled={this.state.running}>\r\n            Reset\r\n          </button>\r\n          <button type=\"button\" className=\"input-button\" name=\"Stop\" \r\n            onClick={this.stop.bind(this)} disabled={! this.state.running}>\r\n            Stop\r\n          </button>\r\n        </div>\r\n        <div className=\"output-row\">\r\n          <textarea className=\"textarea-output\" id=\"output\" name=\"output\" \r\n            value={this.state.result.output} readOnly />\r\n        </div>\r\n        <footer>\r\n          Email: <a className=\"footer-link\" href=\"mailto:john.e.garnham@gmail.com\">john.e.garnham@gmail.com</a> \r\n          Twitter: <a className=\"footer-link\"  href=\"https://twitter.com/ViNoDevErik\">ViNoDevErik</a>\r\n          Source: <a className=\"footer-link\"  href=\"https://github.com/JohnGarnham/Vite-Vanity-Address-Generator\">\r\n            https://github.com/JohnGarnham/Vite-Vanity-Address-Generator\r\n            </a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}