{"version":3,"sources":["findVanityAddress.js","App.js","reportWebVitals.js","index.js"],"names":["__read","this","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spreadArray","to","from","il","length","j","Object","defineProperty","exports","isHexString","searchAddresses","vitejs_1","require","getRandomValues","isMatch","address","use_prefix","prefix","use_suffix","suffix","addr","substring","startsWith","toLowerCase","endsWith","generateNewRandomSeed","buffer","array","Uint8Array","map","x","toString","padStart","join","count","webWorker","Worker","onerror","err","console","log","postMessage","matches","Array","seed","keyPair","wallet","deriveKeyPairByIndex","createAddressByPrivateKey","privateKey","newMatch","str","test","VanityAddressForm","props","state","search","iterations","result","output","event","target","JSON","stringify","setState","matchLabel","document","getElementById","innerHTML","preventDefault","labelStr","match","publicKey","originalAddress","alert","className","type","id","checked","onChange","handlePrefixCheckboxChanged","bind","name","handlePrefixChanged","handleSuffixCheckboxChanged","handleSuffixChanged","handleIterationsChanged","onClick","generateAddresses","reset","readOnly","href","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6feb4d4e.chunk.js","sourcesContent":["\"use strict\";\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isHexString = exports.searchAddresses = void 0;\r\nvar vitejs_1 = require(\"@vite/vitejs\");\r\nvar getRandomValues = require('get-random-values');\r\n// Returns true if address matches our criteria\r\nfunction isMatch(address, use_prefix, prefix, use_suffix, suffix) {\r\n    // Chop off vite_\r\n    var addr = address.substring(5);\r\n    // Check matching prefix \r\n    if (use_prefix) {\r\n        // Fail on null or empty string\r\n        if (prefix == null)\r\n            return false;\r\n        // Fail on mismatch\r\n        if (!addr.startsWith(prefix.toLowerCase()))\r\n            return false;\r\n    }\r\n    // Check matching suffix\r\n    if (use_suffix) {\r\n        // Fail on null or empty string\r\n        if (suffix == null)\r\n            return false;\r\n        // Fail on mismatch\r\n        if (!addr.endsWith(suffix.toLowerCase()))\r\n            return false;\r\n    }\r\n    // If you reached here, you've won! :)\r\n    return true;\r\n}\r\n// Generate count Vite address and search for prefix or suffix \r\n// Return an array of matching MatchObj objects\r\nfunction searchAddresses(use_prefix, prefix, use_suffix, suffix, count) {\r\n    // Debug log\r\n    //console.log(\"In searchAddresses(${use_prefix},${prefix},${use_suffix},${suffix},${count})\");\r\n    // Create a web worker\r\n    var webWorker = new Worker('worker.js');\r\n    webWorker.onerror = function (err) { console.log(\"Web worker error: \", err); };\r\n    // Pass in search parameters to webworker\r\n    webWorker.postMessage({ use_prefix: use_prefix, prefix: prefix, use_suffix: use_suffix, suffix: suffix, count: count });\r\n    // Create matches array\r\n    var matches = new Array();\r\n    // Iterate thru count addresses\r\n    for (var i = 0; i < count; i++) {\r\n        // Generate new random seed\r\n        var seed = generateNewRandomSeed();\r\n        // Generate an address from this seed\r\n        var index = 0;\r\n        var keyPair = vitejs_1.wallet.deriveKeyPairByIndex(seed, index);\r\n        var address = vitejs_1.wallet.createAddressByPrivateKey(keyPair.privateKey);\r\n        // Check if generated address matches criteria\r\n        if (isMatch(address.address, use_prefix, prefix, use_suffix, suffix)) {\r\n            // Create new match object\r\n            var newMatch = ({\r\n                address: address,\r\n                seed: seed\r\n            });\r\n            // Push onto matches array\r\n            matches.push(newMatch);\r\n            // Debug matching address\r\n            //console.log(\"New address match found: \", newMatch);\r\n        }\r\n    }\r\n    // Return matches\r\n    return matches;\r\n}\r\nexports.searchAddresses = searchAddresses;\r\n// Generate new random seed\r\nfunction generateNewRandomSeed() {\r\n    // Generate random 32 byte seed\r\n    var array = new Uint8Array(32);\r\n    getRandomValues(array);\r\n    // Generate randomized hex string for seed\r\n    return buf2hex(array.buffer);\r\n}\r\n// Returns whether or not str is valid hex string\r\nfunction isHexString(str) {\r\n    var re = /^([0-9A-Fa-f])*$/;\r\n    return (re.test(str));\r\n}\r\nexports.isHexString = isHexString;\r\n// Convert buffer to hex string\r\nfunction buf2hex(buffer) {\r\n    return __spreadArray([], __read(new Uint8Array(buffer))).map(function (x) { return x.toString(16).padStart(2, '0'); }) // Convert to hex, pad with 0\r\n        .join('');\r\n}\r\n","import './App.css';\r\n\r\nimport React from 'react' \r\nimport {searchAddresses, isHexString, MatchObj} from './findVanityAddress'\r\n\r\nconst DEFAULT_ITERATIONS = 500;\r\n\r\nexport default class VanityAddressForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Define state\r\n    this.state = {\r\n        // Search parameters\r\n        search: {      \r\n          prefix: '',\r\n          use_prefix: true,\r\n          suffix: '',\r\n          use_suffix: false,\r\n          iterations: DEFAULT_ITERATIONS\r\n        },\r\n        result: {\r\n          output: ''\r\n        }\r\n      };\r\n  }\r\n\r\n  // Text in prefix textfield modified\r\n  handlePrefixChanged(event) {\r\n    var search = this.state.search;\r\n    search.prefix  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Text in suffix textfield modified\r\n  handleSuffixChanged(event) {\r\n    var search = this.state.search;\r\n    search.suffix  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Text in iterations textfield modified\r\n  handleIterationsChanged(event) {\r\n    var search = this.state.search;\r\n    search.iterations  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Handle check box change\r\n  handlePrefixCheckboxChanged(event) {\r\n    var search = this.state.search;\r\n    // Toggle use_prefix value\r\n    search.use_prefix = ! search.use_prefix; \r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  handleSuffixCheckboxChanged(event) {\r\n    var search = this.state.search;\r\n    // Toggle use_suffix value\r\n    search.use_suffix = ! search.use_suffix; \r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Reset all values\r\n  reset(event) {\r\n    // Set all search terms to their defaults\r\n    var search = this.state.search;\r\n    search.prefix = \"\";\r\n    search.suffix = \"\";\r\n    search.use_prefix = false;\r\n    search.use_suffix = false;\r\n    search.iterations = DEFAULT_ITERATIONS;\r\n    this.setState({ search: search });\r\n    // Clear matching count label\r\n    let matchLabel = document.getElementById(\"matches-found-label\");\r\n    if(matchLabel != null) {\r\n      matchLabel.innerHTML = \"\";\r\n    }\r\n    // Clear output\r\n    var result = this.state.result;\r\n    result.output= \"\";\r\n    this.setState({ result: result });\r\n  }\r\n\r\n  // Generate addresses\r\n  generateAddresses(event) {\r\n\r\n    event.preventDefault();\r\n\r\n    // Grab search state. Log for debug\r\n    var search = this.state.search;\r\n    console.log(JSON.stringify(search));\r\n\r\n    // Grab search parameters\r\n    let prefix = this.state.search.prefix;\r\n    let use_prefix = this.state.search.use_prefix;\r\n    let suffix = this.state.search.suffix;\r\n    let use_suffix = this.state.search.use_suffix;\r\n    let count = this.state.search.iterations;\r\n\r\n    // Make sure suffix is valid hex string\r\n    if(! isHexString(search.prefix)) {\r\n      alert(\"Prefix must be a hex string. Valid characters are 0-9 and A-F.\");\r\n      return;\r\n    }\r\n    // Make sure suffix is valid hex string\r\n    if(! isHexString(search.suffix)) {\r\n      alert(\"Suffix must be a hex string. Valid characters are 0-9 and A-F.\");\r\n      return;\r\n    }\r\n\r\n    // Create a web worker\r\n    const webWorker = new Worker('worker.js');\r\n    webWorker.onerror = (err) => { console.log(\"Web worker error: \", err); }\r\n    // Pass in search parameters to webworker\r\n    webWorker.postMessage( { use_prefix: use_prefix, prefix: prefix, use_suffix: use_suffix, suffix:suffix, count:count });\r\n\r\n    // Call search addresses function\r\n    let matches = searchAddresses(use_prefix,prefix,use_suffix,suffix,count);\r\n\r\n\r\n    let output = \"\";\r\n\r\n    // Set matches found label\r\n    let labelStr = \"\";\r\n    if(matches.length == 0) {\r\n      labelStr = output = \"No addresses found\";\r\n    } else {\r\n      labelStr = matches.length + \" matching addresses found\";\r\n    }\r\n    console.log(labelStr);\r\n    let matchLabel = document.getElementById(\"matches-found-label\");\r\n    if(matchLabel != null) {\r\n      matchLabel.innerHTML = labelStr;\r\n    }\r\n      \r\n    // Set output textfield\r\n    let i = 0;\r\n    for(i = 0; i < matches.length; i++) {\r\n      let match = matches[i];\r\n      output += \"Match #\" + (i + 1) + \"\\n\" +\r\n          \"Address: \" + match.address.address + \"\\n\" +\r\n          \"Seed: \" + match.seed + \"\\n\" +\r\n          \"Private Key: \" + match.address.privateKey + \"\\n\" +\r\n          \"Public Key: \" + match.address.publicKey + \"\\n\" +\r\n          \"Original Address: \" + match.address.originalAddress + \"\\n\\n\";\r\n    }\r\n\r\n    // Update output state\r\n    var result = this.state.result;\r\n    result.output = output;\r\n    this.setState({ result: result });\r\n  }\r\n\r\n  render() {\r\n  return (\r\n      <div className=\"root\">\r\n        <div className=\"header\">\r\n          <h2>Vite Vanity Address Creator</h2>\r\n        </div>\r\n        <div className=\"input-section\">\r\n          <div className=\"input-text-row\"> \r\n            <input type=\"checkbox\" className=\"input-checkbox\" id=\"usePrefix\" value={this.state.search.use_prefix} \r\n              checked={this.state.search.use_prefix} onChange={this.handlePrefixCheckboxChanged.bind(this)}/>\r\n            <label className=\"input-label\">Prefix:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"prefix\" name=\"prefix\" \r\n              value={this.state.search.prefix} onChange={this.handlePrefixChanged.bind(this)} />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n            <input type=\"checkbox\" className=\"input-checkbox\" id=\"useSuffix\" value={this.state.search.use_suffix} \r\n              checked={this.state.search.use_suffix} onChange={this.handleSuffixCheckboxChanged.bind(this)}/>\r\n            <label className=\"input-label\">Suffix:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"suffix\" name=\"suffix\" \r\n                value={this.state.search.suffix} onChange={this.handleSuffixChanged.bind(this)} />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n            <label className=\"input-label\">Iterations:</label>\r\n            <input type=\"text\" className=\"text-input-iterations\" id=\"iterations\" name=\"iterations\" \r\n              value={this.state.search.iterations} onChange={this.handleIterationsChanged.bind(this)} />\r\n            <label className=\"matches-label\" name=\"matches-found-label\" id=\"matches-found-label\"></label>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-button-row\">\r\n          <button type=\"button\" className=\"input-button\" name=\"Generate\" onClick={this.generateAddresses.bind(this)}>\r\n            Generate\r\n          </button>\r\n          <button type=\"button\" className=\"input-button\" name=\"Reset\" onClick={this.reset.bind(this)}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n        <div className=\"output-row\">\r\n          <textarea className=\"textarea-output\" id=\"output\" name=\"output\" \r\n            value={this.state.result.output} readOnly />\r\n        </div>\r\n        <footer>\r\n          Email: <a className=\"footer-link\" href=\"mailto:john.e.garnham@gmail.com\">john.e.garnham@gmail.com</a> \r\n          Twitter: <a className=\"footer-link\"  href=\"https://twitter.com/ViNoDevErik\">ViNoDevErik</a>\r\n          GITHUB: <a className=\"footer-link\"  href=\"https://github.com/JohnGarnham/Vite-Vanity-Address-Generator\">\r\n            https://github.com/JohnGarnham/Vite-Vanity-Address-Generator\r\n            </a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}