{"version":3,"sources":["findVanityAddress.js","App.js","reportWebVitals.js","index.js"],"names":["__read","this","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spreadArray","to","from","il","length","j","Object","defineProperty","exports","isHexString","searchAddresses","vitejs_1","require","getRandomValues","isMatch","address","use_prefix","prefix","use_suffix","suffix","addr","substring","startsWith","toLowerCase","endsWith","count","buffer","output","array","Uint8Array","seed","map","x","toString","padStart","join","keyPair","wallet","deriveKeyPairByIndex","createAddressByPrivateKey","privateKey","publicKey","originalAddress","str","test","VanityAddressForm","props","state","search","iterations","result","event","target","console","log","JSON","stringify","setState","preventDefault","alert","className","type","id","checked","onChange","handlePrefixCheckboxChanged","bind","name","handlePrefixChanged","handleSuffixCheckboxChanged","handleSuffixChanged","handleIterationsChanged","onClick","generateAddresses","reset","readOnly","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.526f7d66.chunk.js","sourcesContent":["\"use strict\";\r\nvar __read = (this && this.__read) || function (o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n};\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isHexString = exports.searchAddresses = void 0;\r\nvar vitejs_1 = require(\"@vite/vitejs\");\r\nvar getRandomValues = require('get-random-values');\r\n// Returns true if address matches our criteria\r\nfunction isMatch(address, use_prefix, prefix, use_suffix, suffix) {\r\n    // Chop off vite_\r\n    var addr = address.substring(5);\r\n    // Check matching prefix \r\n    if (use_prefix) {\r\n        // Fail on null or empty string\r\n        if (prefix == null)\r\n            return false;\r\n        // Fail on mismatch\r\n        if (!addr.startsWith(prefix.toLowerCase()))\r\n            return false;\r\n    }\r\n    // Check matching suffix\r\n    if (use_suffix) {\r\n        // Fail on null or empty string\r\n        if (suffix == null)\r\n            return false;\r\n        // Fail on mismatch\r\n        if (!addr.endsWith(suffix.toLowerCase()))\r\n            return false;\r\n    }\r\n    // If you reached here, you've won! :)\r\n    return true;\r\n}\r\n// Generate count Vite address and search for prefix or suffix \r\nfunction searchAddresses(use_prefix, prefix, use_suffix, suffix, count) {\r\n    // Construct output string from matching addresses\r\n    var output = \"\";\r\n    // Iterate thru count addresses\r\n    for (var i = 0; i < count; i++) {\r\n        // Generate random 32 byte seed\r\n        var array = new Uint8Array(32);\r\n        getRandomValues(array);\r\n        // Generate randomized hex string for seed\r\n        var seed = buf2hex(array.buffer);\r\n        // Generate an address\r\n        var index = 0;\r\n        var keyPair = vitejs_1.wallet.deriveKeyPairByIndex(seed, index);\r\n        var address = vitejs_1.wallet.createAddressByPrivateKey(keyPair.privateKey);\r\n        // Check if generated address matches criteria\r\n        if (isMatch(address.address, use_prefix, prefix, use_suffix, suffix)) {\r\n            var addressInfo = \"Address: \" + address.address + \"\\n\" +\r\n                \"Seed: \" + seed + \"\\n\" +\r\n                \"Private Key: \" + address.privateKey + \"\\n\" +\r\n                \"Public Key: \" + address.publicKey + \"\\n\" +\r\n                \"Original Address: \" + address.originalAddress + \"\\n\\n\";\r\n            output += addressInfo;\r\n        }\r\n    }\r\n    // Return output string\r\n    return output;\r\n}\r\nexports.searchAddresses = searchAddresses;\r\n// Returns whether or not str is valid hex string\r\nfunction isHexString(str) {\r\n    var re = /^([0-9A-Fa-f])*$/;\r\n    return (re.test(str));\r\n}\r\nexports.isHexString = isHexString;\r\n// Convert buffer to hex string\r\nfunction buf2hex(buffer) {\r\n    return __spreadArray([], __read(new Uint8Array(buffer))).map(function (x) { return x.toString(16).padStart(2, '0'); }) // Convert to hex, pad with 0\r\n        .join('');\r\n}\r\n","import './App.css';\r\nimport React from 'react' \r\nimport {searchAddresses, isHexString} from './findVanityAddress'\r\n\r\nconst DEFAULT_ITERATIONS = 1000;\r\n\r\nexport default class VanityAddressForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Define state\r\n    this.state = {\r\n        // Search parameters\r\n        search: {      \r\n          prefix: '',\r\n          use_prefix: true,\r\n          suffix: '',\r\n          use_suffix: false,\r\n          iterations: DEFAULT_ITERATIONS\r\n        },\r\n        result: {\r\n          output: ''\r\n        }\r\n      };\r\n  }\r\n\r\n  // Text in prefix textfield modified\r\n  handlePrefixChanged(event) {\r\n    var search = this.state.search;\r\n    search.prefix  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Text in suffix textfield modified\r\n  handleSuffixChanged(event) {\r\n    var search = this.state.search;\r\n    search.suffix  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Text in iterations textfield modified\r\n  handleIterationsChanged(event) {\r\n    var search = this.state.search;\r\n    search.iterations  = event.target.value;\r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Handle check box change\r\n  handlePrefixCheckboxChanged(event) {\r\n    var search = this.state.search;\r\n    // Toggle use_prefix value\r\n    search.use_prefix = ! search.use_prefix; \r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  handleSuffixCheckboxChanged(event) {\r\n    var search = this.state.search;\r\n    // Toggle use_suffix value\r\n    search.use_suffix = ! search.use_suffix; \r\n    console.log(JSON.stringify(search));\r\n    this.setState({ search: search });\r\n  }\r\n\r\n  // Reset all values\r\n  reset(event) {\r\n    // Set all search terms to their defaults\r\n    var search = this.state.search;\r\n    search.prefix = \"\";\r\n    search.suffix = \"\";\r\n    search.use_prefix = false;\r\n    search.use_suffix = false;\r\n    search.iterations = DEFAULT_ITERATIONS;\r\n    this.setState({ search: search });\r\n    // Clear output\r\n    var result = this.state.result;\r\n    result.output= \"\";\r\n    this.setState({ result: result });\r\n  }\r\n\r\n  // Generate addresses\r\n  generateAddresses(event) {\r\n\r\n    event.preventDefault();\r\n    // Grab search state. Log for debug\r\n    var search = this.state.search;\r\n    console.log(JSON.stringify(search));\r\n\r\n    // Grab search parameters\r\n    let prefix = this.state.search.prefix;\r\n    let use_prefix = this.state.search.use_prefix;\r\n    let suffix = this.state.search.suffix;\r\n    let use_suffix = this.state.search.use_suffix;\r\n    let count = this.state.search.iterations;\r\n\r\n    // Make sure suffix is valid hex string\r\n    if(! isHexString(search.prefix)) {\r\n      alert(\"Prefix must be a hex string. Valid characters are 0-9 and A-F.\");\r\n      return;\r\n    }\r\n    // Make sure suffix is valid hex string\r\n    if(! isHexString(search.suffix)) {\r\n      alert(\"Suffix must be a hex string. Valid characters are 0-9 and A-F.\");\r\n      return;\r\n    }\r\n\r\n    // Call search addresses function\r\n    let output = searchAddresses(use_prefix,prefix,use_suffix,suffix,count);\r\n    // If empty string returned, no matches found\r\n    if(!output || output.length === 0) {\r\n      console.log(\"No addresses found after \" + count + \" iterations.\");\r\n      output = \"No addresses found\";\r\n    } else {\r\n      console.log(\"Address found \", output);\r\n    }\r\n    // Set the result of the search\r\n    var result = this.state.result;\r\n    result.output = output;\r\n    this.setState({ result: result });\r\n  }\r\n\r\n  render() {\r\n  return (\r\n      <div className=\"root\">\r\n        <div className=\"header\">\r\n          <h2>Vite Vanity Address Creator</h2>\r\n        </div>\r\n        <div className=\"input-section\">\r\n          <div className=\"input-text-row\"> \r\n            <input type=\"checkbox\" className=\"input-checkbox\" id=\"usePrefix\" value={this.state.search.use_prefix} \r\n              checked={this.state.search.use_prefix} onChange={this.handlePrefixCheckboxChanged.bind(this)}/>\r\n            <label className=\"input-label\">Prefix:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"prefix\" name=\"prefix\" \r\n              value={this.state.search.prefix} onChange={this.handlePrefixChanged.bind(this)} />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n            <input type=\"checkbox\" className=\"input-checkbox\" id=\"useSuffix\" value={this.state.search.use_suffix} \r\n              checked={this.state.search.use_suffix} onChange={this.handleSuffixCheckboxChanged.bind(this)}/>\r\n            <label className=\"input-label\">Suffix:</label>\r\n            <input type=\"text\" className=\"text-input\" id=\"suffix\" name=\"suffix\" \r\n                value={this.state.search.suffix} onChange={this.handleSuffixChanged.bind(this)} />\r\n          </div>\r\n          <div className=\"input-text-row\">\r\n          <label className=\"input-label\">Iterations:</label>\r\n            <input type=\"text\" className=\"text-input-iterations\" id=\"iterations\" name=\"iterations\" \r\n              value={this.state.search.iterations} onChange={this.handleIterationsChanged.bind(this)} />\r\n          </div>\r\n        </div>\r\n        <div className=\"input-button-row\">\r\n          <button type=\"button\" className=\"input-button\" name=\"Generate\" onClick={this.generateAddresses.bind(this)}>\r\n            Generate\r\n          </button>\r\n          <button type=\"button\" className=\"input-button\" name=\"Reset\" onClick={this.reset.bind(this)}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n        <div className=\"output-row\">\r\n          <textarea className=\"textarea-output\" id=\"output\" name=\"output\" \r\n            value={this.state.result.output} readOnly />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}